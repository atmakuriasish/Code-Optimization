class Test extends java.lang.Object
{

    void <init>()
    {
        Test r0;

        r0 := @this: Test;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void bar()
    {
        java.io.PrintStream $r0;
        Test r1;

        r1 := @this: Test;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("Test bar");

        return;
    }

    public static void main(java.lang.String[])
    {
        int $i0, i1;
        Test2 $r0;
        Test $r1, $r3, r5;
        java.lang.String[] r4;

        r4 := @parameter0: java.lang.String[];

        i1 = 0;

     label1:
        if i1 >= 20000000 goto label4;

        $i0 = i1 % 2;

        if $i0 != 0 goto label2;

        $r3 = new Test;

        specialinvoke $r3.<Test: void <init>()>();

        r5 = $r3;

        goto label3;

     label2:
        $r0 = new Test2;

        specialinvoke $r0.<Test2: void <init>()>();

        r5 = $r0;

     label3:
        virtualinvoke r5.<Test: void bar()>();

        $r1 = new Test;

        specialinvoke $r1.<Test: void <init>()>();

        staticinvoke <Test: void barclone(Test)>($r1);

        i1 = i1 + 1;

        goto label1;

     label4:
        return;
    }

    public static void barclone(Test)
    {
        java.io.PrintStream $r0;
        Test r1;

        r1 := @parameter0: Test;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("Test bar");

        return;
    }
}
